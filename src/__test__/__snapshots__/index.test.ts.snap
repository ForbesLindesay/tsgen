// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`./color/adjustHue.js.flow 1`] = `
"declare function curriedAdjustHueWith1(color: string): string;
declare function curriedAdjustHue(degree: number): typeof curriedAdjustHueWith1;
declare function curriedAdjustHue(degree: number, color: string): string;

export default curriedAdjustHue;
"
`;

exports[`./color/complement.js.flow 1`] = `
"declare function complement(color: string): string;

export default complement;
"
`;

exports[`./color/darken.js.flow 1`] = `
"declare function curriedDarkenWith1(color: string): string;
declare function curriedDarken(amount: number): typeof curriedDarkenWith1;
declare function curriedDarken(amount: number, color: string): string;

export default curriedDarken;
"
`;

exports[`./color/desaturate.js.flow 1`] = `
"declare function curriedDesaturateWith1(color: string): string;
declare function curriedDesaturate(
  amount: number,
): typeof curriedDesaturateWith1;
declare function curriedDesaturate(amount: number, color: string): string;

export default curriedDesaturate;
"
`;

exports[`./color/grayscale.js.flow 1`] = `
"declare function grayscale(color: string): string;

export default grayscale;
"
`;

exports[`./color/hsl.js.flow 1`] = `
"import { HslColor } from '../types/color';

declare function hsl(
  value: HslColor | number,
  saturation?: number,
  lightness?: number,
): string;

export default hsl;
"
`;

exports[`./color/hsla.js.flow 1`] = `
"import { HslaColor } from '../types/color';

declare function hsla(
  value: HslaColor | number,
  saturation?: number,
  lightness?: number,
  alpha?: number,
): string;

export default hsla;
"
`;

exports[`./color/invert.js.flow 1`] = `
"declare function invert(color: string): string;

export default invert;
"
`;

exports[`./color/lighten.js.flow 1`] = `
"declare function curriedLightenWith1(color: string): string;
declare function curriedLighten(amount: number): typeof curriedLightenWith1;
declare function curriedLighten(amount: number, color: string): string;

export default curriedLighten;
"
`;

exports[`./color/mix.js.flow 1`] = `
"declare function curriedMixWith2(otherColor: string): string;
declare function curriedMixWith1(color: string): typeof curriedMixWith2;
declare function curriedMixWith1(color: string, otherColor: string): string;
declare function curriedMix(weight?: number): typeof curriedMixWith1;
declare function curriedMix(
  weight: number,
  color: string,
): typeof curriedMixWith2;
declare function curriedMix(
  weight: number,
  color: string,
  otherColor: string,
): string;

export default curriedMix;
"
`;

exports[`./color/opacify.js.flow 1`] = `
"declare function curriedOpacifyWith1(color: string): string;
declare function curriedOpacify(amount: number): typeof curriedOpacifyWith1;
declare function curriedOpacify(amount: number, color: string): string;

export default curriedOpacify;
"
`;

exports[`./color/parseToHsl.js.flow 1`] = `
"import { HslColor } from '../types/color';
import { HslaColor } from '../types/color';

declare function parseToHsl(color: string): HslColor | HslaColor;

export default parseToHsl;
"
`;

exports[`./color/parseToRgb.js.flow 1`] = `
"import { RgbColor } from '../types/color';
import { RgbaColor } from '../types/color';

declare function parseToRgb(color: string): RgbColor | RgbaColor;

export default parseToRgb;
"
`;

exports[`./color/rgb.js.flow 1`] = `
"import { RgbColor } from '../types/color';

declare function rgb(
  value: RgbColor | number,
  green?: number,
  blue?: number,
): string;

export default rgb;
"
`;

exports[`./color/rgba.js.flow 1`] = `
"import { RgbaColor } from '../types/color';

declare function rgba(
  firstValue: RgbaColor | number | string,
  secondValue?: number,
  thirdValue?: number,
  fourthValue?: number,
): string;

export default rgba;
"
`;

exports[`./color/saturate.js.flow 1`] = `
"declare function curriedSaturateWith1(color: string): string;
declare function curriedSaturate(amount: number): typeof curriedSaturateWith1;
declare function curriedSaturate(amount: number, color: string): string;

export default curriedSaturate;
"
`;

exports[`./color/setHue.js.flow 1`] = `
"declare function curriedSetHueWith1(color: string): string;
declare function curriedSetHue(hue: number): typeof curriedSetHueWith1;
declare function curriedSetHue(hue: number, color: string): string;

export default curriedSetHue;
"
`;

exports[`./color/setLightness.js.flow 1`] = `
"declare function curriedSetLightnessWith1(color: string): string;
declare function curriedSetLightness(
  lightness: number,
): typeof curriedSetLightnessWith1;
declare function curriedSetLightness(lightness: number, color: string): string;

export default curriedSetLightness;
"
`;

exports[`./color/setSaturation.js.flow 1`] = `
"declare function curriedSetSaturationWith1(color: string): string;
declare function curriedSetSaturation(
  saturation: number,
): typeof curriedSetSaturationWith1;
declare function curriedSetSaturation(
  saturation: number,
  color: string,
): string;

export default curriedSetSaturation;
"
`;

exports[`./color/shade.js.flow 1`] = `
"declare function curriedShadeWith1(color: string): string;
declare function curriedShade(percentage: number): typeof curriedShadeWith1;
declare function curriedShade(percentage: number, color: string): string;

export default curriedShade;
"
`;

exports[`./color/tint.js.flow 1`] = `
"declare function curriedTintWith1(color: string): string;
declare function curriedTint(percentage: number): typeof curriedTintWith1;
declare function curriedTint(percentage: number, color: string): string;

export default curriedTint;
"
`;

exports[`./color/toColorString.js.flow 1`] = `
"import { RgbColor } from '../types/color';
import { RgbaColor } from '../types/color';
import { HslColor } from '../types/color';
import { HslaColor } from '../types/color';

declare function toColorString(
  color: RgbColor | RgbaColor | HslColor | HslaColor,
): string;

export default toColorString;
"
`;

exports[`./color/transparentize.js.flow 1`] = `
"declare function curriedTransparentizeWith1(color: string): string;
declare function curriedTransparentize(
  amount: number,
): typeof curriedTransparentizeWith1;
declare function curriedTransparentize(amount: number, color: string): string;

export default curriedTransparentize;
"
`;

exports[`./helpers/directionalProperty.js.flow 1`] = `
"declare function directionalProperty(
  property: string,
  ...values: Array<null | void | string>
): Object;

export default directionalProperty;
"
`;

exports[`./helpers/em.js.flow 1`] = `
"declare const em: (value: string | number, base?: string | number) => string;

export default em;
"
`;

exports[`./helpers/modularScale.js.flow 1`] = `
"declare const ratioNames: {
  minorSecond: 1.067;
  majorSecond: 1.125;
  minorThird: 1.2;
  majorThird: 1.25;
  perfectFourth: 1.333;
  augFourth: 1.414;
  perfectFifth: 1.5;
  minorSixth: 1.6;
  goldenSection: 1.618;
  majorSixth: 1.667;
  minorSeventh: 1.778;
  majorSeventh: 1.875;
  octave: 2;
  majorTenth: 2.5;
  majorEleventh: 2.667;
  majorTwelfth: 3;
  doubleOctave: 4;
};
export type Ratio =
  | number
  | 'minorSecond'
  | 'majorSecond'
  | 'minorThird'
  | 'majorThird'
  | 'perfectFourth'
  | 'augFourth'
  | 'perfectFifth'
  | 'minorSixth'
  | 'goldenSection'
  | 'majorSixth'
  | 'minorSeventh'
  | 'majorSeventh'
  | 'octave'
  | 'majorTenth'
  | 'majorEleventh'
  | 'majorTwelfth'
  | 'doubleOctave';
declare function modularScale(
  steps: number,
  base?: number | string,
  ratio?: Ratio,
): string;

export { ratioNames };
export default modularScale;
"
`;

exports[`./helpers/rem.js.flow 1`] = `
"declare const rem: (value: string | number, base?: string | number) => string;

export default rem;
"
`;

exports[`./helpers/stripUnit.js.flow 1`] = `
"declare function stripUnit(value: string): number | string;

export default stripUnit;
"
`;

exports[`./index.js.flow 1`] = `
"import adjustHue from './color/adjustHue';
import animation from './shorthands/animation';
import backgroundImages from './shorthands/backgroundImages';
import backgrounds from './shorthands/backgrounds';
import borderColor from './shorthands/borderColor';
import borderRadius from './shorthands/borderRadius';
import borderStyle from './shorthands/borderStyle';
import borderWidth from './shorthands/borderWidth';
import buttons from './shorthands/buttons';
import clearFix from './mixins/clearFix';
import complement from './color/complement';
import darken from './color/darken';
import desaturate from './color/desaturate';
import directionalProperty from './helpers/directionalProperty';
import ellipsis from './mixins/ellipsis';
import em from './helpers/em';
import fontFace from './mixins/fontFace';
import grayscale from './color/grayscale';
import invert from './color/invert';
import hideText from './mixins/hideText';
import hiDPI from './mixins/hiDPI';
import hsl from './color/hsl';
import hsla from './color/hsla';
import lighten from './color/lighten';
import margin from './shorthands/margin';
import mix from './color/mix';
import modularScale from './helpers/modularScale';
import normalize from './mixins/normalize';
import opacify from './color/opacify';
import padding from './shorthands/padding';
import parseToHsl from './color/parseToHsl';
import parseToRgb from './color/parseToRgb';
import placeholder from './mixins/placeholder';
import position from './shorthands/position';
import radialGradient from './mixins/radialGradient';
import rem from './helpers/rem';
import retinaImage from './mixins/retinaImage';
import rgb from './color/rgb';
import rgba from './color/rgba';
import saturate from './color/saturate';
import selection from './mixins/selection';
import setHue from './color/setHue';
import setLightness from './color/setLightness';
import setSaturation from './color/setSaturation';
import shade from './color/shade';
import size from './shorthands/size';
import stripUnit from './helpers/stripUnit';
import textInputs from './shorthands/textInputs';
import timingFunctions from './mixins/timingFunctions';
import tint from './color/tint';
import toColorString from './color/toColorString';
import transitions from './shorthands/transitions';
import transparentize from './color/transparentize';
import triangle from './mixins/triangle';
import wordWrap from './mixins/wordWrap';

export { adjustHue };
export { animation };
export { backgroundImages };
export { backgrounds };
export { borderColor };
export { borderRadius };
export { borderStyle };
export { borderWidth };
export { buttons };
export { clearFix };
export { complement };
export { darken };
export { desaturate };
export { directionalProperty };
export { ellipsis };
export { em };
export { fontFace };
export { grayscale };
export { invert };
export { hideText };
export { hiDPI };
export { hsl };
export { hsla };
export { lighten };
export { margin };
export { mix };
export { modularScale };
export { normalize };
export { opacify };
export { padding };
export { parseToHsl };
export { parseToRgb };
export { placeholder };
export { position };
export { radialGradient };
export { rem };
export { retinaImage };
export { rgb };
export { rgba };
export { saturate };
export { selection };
export { setHue };
export { setLightness };
export { setSaturation };
export { shade };
export { size };
export { stripUnit };
export { textInputs };
export { timingFunctions };
export { tint };
export { toColorString };
export { transitions };
export { transparentize };
export { triangle };
export { wordWrap };
"
`;

exports[`./mixins/clearFix.js.flow 1`] = `
"declare function clearFix(parent?: string): Object;

export default clearFix;
"
`;

exports[`./mixins/ellipsis.js.flow 1`] = `
"declare function ellipsis(width?: string): Object;

export default ellipsis;
"
`;

exports[`./mixins/fontFace.js.flow 1`] = `
"declare interface FontFaceConfiguration {
  fontFamily: string;
  fontFilePath: string;
  fontStretch: string;
  fontStyle: string;
  fontVariant: string;
  fontWeight: string;
  fileFormats: Array<string>;
  localFonts: Array<string>;
  unicodeRange: string;
}
export { FontFaceConfiguration };
declare function fontFace({
  fontFamily,
  fontFilePath,
  fontStretch,
  fontStyle,
  fontVariant,
  fontWeight,
  fileFormats,
  localFonts,
  unicodeRange,
}: FontFaceConfiguration): Object;

export default fontFace;
"
`;

exports[`./mixins/hiDPI.js.flow 1`] = `
"declare function hiDPI(ratio?: number): string;

export default hiDPI;
"
`;

exports[`./mixins/hideText.js.flow 1`] = `
"declare function hideText(): {
  'text-indent': string;
  overflow: string;
  'white-space': string;
};

export default hideText;
"
`;

exports[`./mixins/normalize.js.flow 1`] = `
"declare function normalize(excludeOpinionated?: boolean): Object;

export default normalize;
"
`;

exports[`./mixins/placeholder.js.flow 1`] = `
"declare function placeholder(styles: Object, parent?: string): Object;

export default placeholder;
"
`;

exports[`./mixins/radialGradient.js.flow 1`] = `
"declare interface RadialGradientConfiguration {
  colorStops: Array<string>;
  extent: string;
  fallback: string;
  position: string;
  shape: string;
}
export { RadialGradientConfiguration };
declare function radialGradient({
  colorStops,
  extent,
  fallback,
  position,
  shape,
}: RadialGradientConfiguration): Object;

export default radialGradient;
"
`;

exports[`./mixins/retinaImage.js.flow 1`] = `
"declare function retinaImage(
  filename: string,
  backgroundSize?: string,
  extension?: string,
  retinaFilename?: string,
  retinaSuffix?: string,
): Object;

export default retinaImage;
"
`;

exports[`./mixins/selection.js.flow 1`] = `
"declare function selection(styles: Object, parent?: string): Object;

export default selection;
"
`;

exports[`./mixins/timingFunctions.js.flow 1`] = `
"export type TimingFunction =
  | 'easeInBack'
  | 'easeInCirc'
  | 'easeInCubic'
  | 'easeInExpo'
  | 'easeInQuad'
  | 'easeInQuart'
  | 'easeInQuint'
  | 'easeInSine'
  | 'easeOutBack'
  | 'easeOutCubic'
  | 'easeOutCirc'
  | 'easeOutExpo'
  | 'easeOutQuad'
  | 'easeOutQuart'
  | 'easeOutQuint'
  | 'easeOutSine'
  | 'easeInOutBack'
  | 'easeInOutCirc'
  | 'easeInOutCubic'
  | 'easeInOutExpo'
  | 'easeInOutQuad'
  | 'easeInOutQuart'
  | 'easeInOutQuint'
  | 'easeInOutSine';
declare function timingFunctions(timingFunction: TimingFunction): string;

export default timingFunctions;
"
`;

exports[`./mixins/triangle.js.flow 1`] = `
"export type PointingDirection = 'top' | 'right' | 'bottom' | 'left';
declare interface TriangleArgs {
  backgroundColor: string;
  foregroundColor: string;
  height: number | string;
  width: number | string;
  pointingDirection: PointingDirection;
}
export { TriangleArgs };
declare function triangle({
  pointingDirection,
  height,
  width,
  foregroundColor,
  backgroundColor,
}: TriangleArgs): Object;

export default triangle;
"
`;

exports[`./mixins/wordWrap.js.flow 1`] = `
"declare function wordWrap(
  wrap?: string,
): {
  'overflow-wrap': string;
  'word-wrap': string;
  'word-break': string;
};

export default wordWrap;
"
`;

exports[`./shorthands/animation.js.flow 1`] = `
"export type AnimationProperty = string | number;
declare function animation(
  ...args: Array<Array<AnimationProperty> | AnimationProperty>
): {
  animation: string;
};

export default animation;
"
`;

exports[`./shorthands/backgroundImages.js.flow 1`] = `
"declare function backgroundImages(
  ...properties: Array<string>
): {
  'background-image': string;
};

export default backgroundImages;
"
`;

exports[`./shorthands/backgrounds.js.flow 1`] = `
"declare function backgrounds(
  ...properties: Array<string>
): {
  background: string;
};

export default backgrounds;
"
`;

exports[`./shorthands/borderColor.js.flow 1`] = `
"declare function borderColor(...values: Array<null | void | string>): Object;

export default borderColor;
"
`;

exports[`./shorthands/borderRadius.js.flow 1`] = `
"declare function borderRadius(side: string, radius: string): Object;

export default borderRadius;
"
`;

exports[`./shorthands/borderStyle.js.flow 1`] = `
"declare function borderStyle(...values: Array<null | void | string>): Object;

export default borderStyle;
"
`;

exports[`./shorthands/borderWidth.js.flow 1`] = `
"declare function borderWidth(...values: Array<null | void | string>): Object;

export default borderWidth;
"
`;

exports[`./shorthands/buttons.js.flow 1`] = `
"export type ButtonState = void | null | 'active' | 'focus' | 'hover';
declare function buttons(...states: Array<ButtonState>): Object;

export default buttons;
"
`;

exports[`./shorthands/margin.js.flow 1`] = `
"declare function margin(...values: Array<null | void | string>): Object;

export default margin;
"
`;

exports[`./shorthands/padding.js.flow 1`] = `
"declare function padding(...values: Array<null | void | string>): Object;

export default padding;
"
`;

exports[`./shorthands/position.js.flow 1`] = `
"declare function position(
  positionKeyword: string | null,
  ...values: Array<null | void | string>
): Object;

export default position;
"
`;

exports[`./shorthands/size.js.flow 1`] = `
"declare function size(
  height: string,
  width?: string,
): {
  height: string;
  width: string;
};

export default size;
"
`;

exports[`./shorthands/textInputs.js.flow 1`] = `
"export type InputState = void | null | 'active' | 'focus' | 'hover';
declare function textInputs(...states: Array<InputState>): string;

export default textInputs;
"
`;

exports[`./shorthands/transitions.js.flow 1`] = `
"declare function transitions(
  ...properties: Array<string>
): {
  transition: string;
};

export default transitions;
"
`;

exports[`./types/color.js.flow 1`] = `
"declare interface HslColor {
  hue: number;
  saturation: number;
  lightness: number;
}
declare interface HslaColor {
  hue: number;
  saturation: number;
  lightness: number;
  alpha: number;
}
declare interface RgbColor {
  red: number;
  green: number;
  blue: number;
}
declare interface RgbaColor {
  red: number;
  green: number;
  blue: number;
  alpha: number;
}

export { HslColor };
export { HslaColor };
export { RgbColor };
export { RgbaColor };
"
`;
